管理平台前端需求文档
=================

1. 技术栈要求
-----------
- Vue 3
- Element Plus UI
- Vite
- Pinia 状态管理
- Vue Router
- Axios

2. 布局设计
---------
2.1 整体布局
- 顶部导航栏：显示logo、当前管理员信息、退出按钮
- 左侧菜单栏：折叠功能
- 主内容区：面包屑导航、内容展示
- 响应式设计

2.2 左侧菜单
- 仪表盘
- 用户管理
- 任务管理
- 系统设置（可选）

3. 页面功能
---------
3.1 登录页面 (/login)
- 登录表单（用户名、密码）
- 记住密码功能
- 表单验证
- 登录状态维护
- 未登录拦截

3.2 仪表盘页面 (/dashboard)
- 任务统计卡片
  * 总任务数
  * 待处理任务
  * 处理中任务
  * 已完成任务
- 今日数据
  * 今日新增任务
  * 今日完成任务
- 图表展示
  * 任务状态分布饼图
  * 近7天任务趋势折线图

3.3 用户管理页面 (/users)
- 用户列表
  * 分页展示
  * 搜索功能
  * 状态筛选
- 用户操作
  * 查看详情
  * 禁用/启用
  * 查看用户任务
- 表格字段
  * ID
  * 用户名
  * 昵称
  * 状态
  * 注册时间
  * 操作列

3.4 任务管理页面 (/tasks)
- 任务列表
  * 分页展示
  * 高级搜索
    - 状态筛选
    - 用户筛选
    - 日期范围
    - 关键词搜索
- 任务详情
  * 基本信息
  * 媒体文件预览
  * 状态更新记录
- 表格字段
  * ID
  * 用户信息
  * 任务内容
  * 电话号码
  * 状态
  * 创建时间
  * 操作列

4. 功能特性
---------
4.1 权限控制
- 基于 token 的身份验证
- 路由级别的权限控制
- 按钮级别的权限控制

4.2 数据处理
- 全局 loading 状态
- 请求错误统一处理
- 数据缓存策略
- 表单验证规则

4.3 用户体验
- 操作确认提示
- 全局消息提示
- 数据加载骨架屏
- 表单重置功能
- 列表刷新功能

5. 开发规范
---------
5.1 代码组织
- 组件化开发
- 统一的目录结构
- 公共组件封装
- API 接口统一管理

5.2 样式规范
- Element Plus 主题定制
- 统一的颜色变量
- 响应式断点设置
- 布局组件封装

6. 其他要求
---------
6.1 性能优化
- 路由懒加载
- 组件按需加载
- 图片懒加载
- 大数据列表虚拟滚动

6.2 浏览器兼容
- 支持主流现代浏览器
- 移动端适配（可选）

6.3 部署相关
- 环境变量配置
- 打包优化
- 静态资源处理

��意事项：
1. 所有表单操作需要二次确认
2. 敏感操作需要记录操作日志
3. 表格数据需要支持导出功能
4. 所有页面需要有加载和错误状态
5. 需要适配大屏显示 